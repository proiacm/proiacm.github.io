{"version":3,"sources":["About/About.js","Contact/Contact.js","Projects/Projects.js","Lottie.js","Nav/Nav.js","Experience/Experience.js","App.js","serviceWorker.js","index.js"],"names":["About","props","className","id","src","loopText","Contact","target","href","alt","height","width","style","cursor","to","spy","smooth","Projects","name","desc","link","gif","LottieAnimation","lotti","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","Nav","home","animatedText","Experience","logo","App","state","projects","experience","projectList","this","map","project","index","key","experienceList","exp","steps","wrapper","interval","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31a3e26c.chunk.js","sourcesContent":["import React from 'react';\nimport './About.css'\n\nconst About = (props) => {\n    return (\n            <div className='About' id='about'>  \n                <img className='About-img' src='https://i.imgur.com/oOhU8xs.jpg'/>\n                    <div className='About-text'>\n                        <br/>\n                        <h4>Technical skills: React | JavaScript | Ruby on Rails | CSS | SQL</h4>\n                       <p>I leverage empathy and experience in building client relationships\n                        while designing functional, aesthetic applications. <br/> <br/>\n                        As a full-stack dev, I've worked on multiple projects individually and on a team ranging from\n                        database management, object-oriented programming, MVC architecture, responsive SPAs, and aesthetic designs.\n                        I'm familiar with CRUD, RESTful architecture, APIs, and user functionality including third-party authentication. \n                        I thrive within a culture that sets clear expectations and views accountability as positive. \n                        I want to be a part of helping businesses advance their digital footprint in the Information Age\n                        and relish working with people whom I can learn from and that relentlessly look for the best solutions to problems.<br/><br/>\n                        I'm always learning and am currently open to work opportunities or collaboration! <br/><br/></p> \n                       <h3> Let's {props.loopText} </h3> \n                       <hr/>\n                    </div>\n            </div>\n    )\n}\n\nexport default About; ","import React from 'react';\nimport './Contact.css';\nimport {Link} from 'react-scroll'\n\nconst Contact = () => {\n    return (\n        <div className='Contact-img'>\n            <div className='Contact' id='contact'>\n                <br/>\n                <h2>Let's Connect</h2><br/>\n               \n                <a className='Contact-link' target='_blank' href='https://www.linkedin.com/in/cmproia/'> <img src=\"https://i.imgur.com/PEDSkM6.png\" alt=\"CiaraMaria's LinkedIn\" height=\"50\" width=\"50\"/></a> &nbsp; &nbsp;\n                <a className='Contact-link' target='_blank' href='https://github.com/proiacm'><img src=\"https://i.imgur.com/7Av2xFa.png\" alt=\"CiaraMaria's GitHub Profile\" height=\"50\" width=\"50\"/></a> &nbsp; &nbsp;\n                <a className='Contact-link' target='_blank' href='https://dev.to/proiacm'><img src=\"https://d2fltix0v2e0sb.cloudfront.net/dev-badge.svg\" alt=\"CiaraMaria's DEV Profile\" height=\"50\" width=\"50\"/></a> &nbsp; &nbsp;\n                <a className='Contact-link' target='_blank' href={\"mailto:\" + 'proiacm@gmail.com'}><img src=\"https://i.imgur.com/GoTMYXF.png\" alt=\"CiaraMaria's Email\" height=\"50\" width=\"50\"/> </a>\n            \n                <p>I'm in Colorado Springs, CO -- also open to remote work</p> <br/> <br/>\n                <Link style={{ cursor: \"pointer\"}} to=\"nav\" spy={true} smooth={true}><u><img src='https://i.imgur.com/hyJ4Bum.png' height=\"50\" width=\"50\"/></u></Link>\n            </div>\n        </div>\n    )\n};\n\nexport default Contact;\n\n","import React from 'react';\nimport './Projects.css'\n\nconst Projects = (props) => {\n    \n    return (\n        <div className='Project-card'>\n            <h2 id='projects'><u>{props.name}</u></h2>\n            <p>{props.desc}</p>\n            <div className='Project'>\n                <a target='_blank' href={props.link}>\n                    <img className='Project-img' src={props.gif}/>\n                </a> \n            </div> \n        </div>\n    )\n}\n\nexport default Projects;","import React from \"react\";\nimport Lottie from \"react-lottie\";\n\nexport default function LottieAnimation({ lotti, width, height }) {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: lotti,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return (\n    <div>\n      <Lottie options={defaultOptions} height={height} width={width} />\n    </div>\n  );\n}","import React from 'react';\nimport './Nav.css';\nimport {Link} from 'react-scroll'\nimport LottieAnimation from '../Lottie';\nimport home from '../Animation/dev.json';\n\nconst Nav = (props) => {\n\n    return ( \n         <div className='Nav' id='nav'> \n                <LottieAnimation lotti={home} height={300} width={300} />\n                {props.animatedText} <br/>\n                <h3 className='Nav-bar'><Link style={{ cursor: \"pointer\"}} to=\"about\" spy={true} smooth={true}><u>About</u></Link> | <Link style={{ cursor: \"pointer\" }} to=\"projects\" spy={true} smooth={true}><u>Projects</u></Link> | <Link style={{ cursor: \"pointer\" }} to=\"contact\" spy={true} smooth={true}><u>Contact</u></Link></h3>\n        </div>\n    )\n}\n\nexport default Nav; \n\n","import React from 'react';\nimport './Experience.css';\n\nconst Experience = (props) => {\n\n    return (\n        <div className='Experience'>\n            <img src={props.logo} height=\"120\" width=\"120\"/> <br/>\n        </div>\n    )\n}\n\nexport default Experience;","import React, { Component } from 'react';\nimport './App.css';\nimport About from './About/About';\nimport Contact from './Contact/Contact';\nimport Projects from './Projects/Projects';\nimport Nav from './Nav/Nav';\nimport Typical from 'react-typical'\nimport TextLoop from 'react-text-loop';\nimport Experience from './Experience/Experience';\nimport {Link} from 'react-scroll'\n\n\nclass App extends Component {\n\n\n  state = { \n    projects: [\n     { name: 'Traveler', link: 'https://github.com/proiacm/traveler', gif:'https://media.giphy.com/media/hgg0zI4EhUAg3QgYAl/giphy.gif', desc: 'JavaScript trip tracker with Rails API backend.'},\n     { name: 'Glamlex', link:'https://github.com/proiacm/glamlex_sinatra_project', gif: 'https://media.giphy.com/media/UpnkiPR6CAq7HqtI87/giphy.gif', desc: 'Ruby/Sinatra appointment manager using MVC and CRUD.'},\n     { name: 'Untriggered', link: 'https://github.com/proiacm/untriggered', gif:'https://media.giphy.com/media/PGNdCyJiw2vtilMvIO/giphy.gif', desc: 'Ruby on Rails mood journal with Devise and OmniAuth.'}\n   ],\n   experience: [\n     { logo: 'https://i.imgur.com/AZ7wGW8.png'},\n     { logo: 'https://i.imgur.com/WjyvtcA.png'},\n     { logo: 'https://i.imgur.com/LG81wah.png'}\n   ]\n }\n\n  render() {\n\n    let projectList = <div>\n      {this.state.projects.map((project, index) => {\n        return <Projects key={index} name={project.name} link={project.link} gif={project.gif} desc={project.desc} />\n      })}\n    </div>\n\n    let experienceList = <div>\n      {this.state.experience.map((exp, index) => {\n        return <Experience key={index} logo={exp.logo} />\n      })}\n    </div>\n\n    return (\n      <div className=\"App\">\n        <Nav animatedText={<Typical steps={['Hi, I\\'m CiaraMaria and I\\'m a software developer !', 1000]}\n        loop={1}\n        wrapper=\"h1\"/>} />\n        <About loopText={<TextLoop interval={2000}>\n        <span>build something together.</span>\n        <span>solve a problem.</span>\n        <span>grab coffee.</span>\n        <span>pair program.</span>\n        <span>share memes.</span>\n        <span>learn something new.</span>\n        <span>innovate.</span>\n        </TextLoop>} />\n        <h4>A versatile professional with 8+ years of work experience from start-ups to the largest companies in the USA including:</h4>\n        {experienceList} <br/>\n        <Link style={{ cursor: \"pointer\"}} to=\"nav\" spy={true} smooth={true}><u><img src='https://i.imgur.com/hyJ4Bum.png' height=\"50\" width=\"50\"/></u></Link>\n        {projectList}\n        <Link style={{ cursor: \"pointer\"}} to=\"nav\" spy={true} smooth={true}><u><img src='https://i.imgur.com/hyJ4Bum.png' height=\"50\" width=\"50\"/></u></Link>\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}